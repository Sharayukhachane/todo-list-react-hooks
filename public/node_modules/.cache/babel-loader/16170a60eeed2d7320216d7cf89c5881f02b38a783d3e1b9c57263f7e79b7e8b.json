{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shray\\\\Documents\\\\GitHub\\\\todo-list-react-hooks\\\\src\\\\components\\\\FormInput.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport TextField from \"@material-ui/core/TextField\";\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    background: 'linear-gradient(45deg, gray 30%, black 90%)',\n    border: 0,\n    color: 'white',\n    height: 30,\n    padding: '0 10px',\n    whiteSpace: 'nowrap',\n    margin: '15px 0 0 20px'\n  },\n  label: {\n    width: '80%'\n  }\n});\nconst TodoCreator = ({\n  theme,\n  todo,\n  setTodo,\n  clearInput,\n  inputRef,\n  isInputEmpty,\n  preventSubmit\n}) => {\n  _s();\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form__input\",\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.label,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"What's need to be done?\" // better accessibility with Material UI\n          ,\n          value: todo,\n          variant: \"outlined\",\n          onChange: e => setTodo(e.target.value),\n          onFocus: clearInput,\n          ref: inputRef,\n          \"aria-describedby\": \"component-error-text\",\n          onKeyPress: preventSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), !isInputEmpty ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n            id: \"component-error-text\",\n            children: \"Task can't be empty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        alt: \"add-note\",\n        className: classes.root,\n        onKeyPress: preventSubmit,\n        children: \"Add task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoCreator, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n_c = TodoCreator;\nexport default TodoCreator;\nvar _c;\n$RefreshReg$(_c, \"TodoCreator\");","map":{"version":3,"names":["React","Button","makeStyles","ThemeProvider","TextField","FormHelperText","FormControl","jsxDEV","_jsxDEV","Fragment","_Fragment","useStyles","root","background","border","color","height","padding","whiteSpace","margin","label","width","TodoCreator","theme","todo","setTodo","clearInput","inputRef","isInputEmpty","preventSubmit","_s","classes","className","children","id","value","variant","onChange","e","target","onFocus","ref","onKeyPress","fileName","_jsxFileName","lineNumber","columnNumber","type","alt","_c","$RefreshReg$"],"sources":["C:/Users/shray/Documents/GitHub/todo-list-react-hooks/src/components/FormInput.jsx"],"sourcesContent":["import  React from 'react';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        background: 'linear-gradient(45deg, gray 30%, black 90%)',\r\n        border: 0,\r\n        color: 'white',\r\n        height: 30,\r\n        padding: '0 10px',\r\n        whiteSpace: 'nowrap',\r\n        margin: '15px 0 0 20px',\r\n    },\r\n    label: {\r\n        width: '80%'\r\n    }\r\n});\r\n\r\n\r\nconst TodoCreator = ({ theme, todo, setTodo, clearInput, inputRef, isInputEmpty, preventSubmit }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className=\"form__input\">\r\n            <ThemeProvider theme={theme}>\r\n                <FormControl   className={classes.label}>\r\n                    <TextField\r\n                        id=\"outlined-basic\"\r\n                        label=\"What's need to be done?\" // better accessibility with Material UI\r\n                        value={todo}\r\n                        variant=\"outlined\"\r\n                        onChange={(e) => setTodo(e.target.value)}\r\n                        onFocus={clearInput}\r\n                        ref={inputRef}\r\n                        aria-describedby=\"component-error-text\"\r\n                        onKeyPress={preventSubmit}\r\n                    />\r\n\r\n                    { !isInputEmpty ?\r\n                        <></>\r\n                        :\r\n                        <>\r\n                            <FormHelperText id=\"component-error-text\">Task can't be empty</FormHelperText>\r\n                        </>\r\n                    }\r\n                </FormControl>\r\n                <Button\r\n                    type=\"submit\"\r\n                    alt=\"add-note\"\r\n                    className={classes.root}\r\n                    onKeyPress={preventSubmit}\r\n                >\r\n                    Add task\r\n                </Button>\r\n            </ThemeProvider>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport  default TodoCreator;"],"mappings":";;AAAA,OAAQA,KAAK,MAAM,OAAO;AAC1B,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,SAASC,UAAU,EAAEC,aAAa,QAAQ,0BAA0B;AACpE,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,cAAc,MAAM,kCAAkC;AAC7D,OAAOC,WAAW,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExD,MAAMC,SAAS,GAAGT,UAAU,CAAC;EACzBU,IAAI,EAAE;IACFC,UAAU,EAAE,6CAA6C;IACzDC,MAAM,EAAE,CAAC;IACTC,KAAK,EAAE,OAAO;IACdC,MAAM,EAAE,EAAE;IACVC,OAAO,EAAE,QAAQ;IACjBC,UAAU,EAAE,QAAQ;IACpBC,MAAM,EAAE;EACZ,CAAC;EACDC,KAAK,EAAE;IACHC,KAAK,EAAE;EACX;AACJ,CAAC,CAAC;AAGF,MAAMC,WAAW,GAAGA,CAAC;EAAEC,KAAK;EAAEC,IAAI;EAAEC,OAAO;EAAEC,UAAU;EAAEC,QAAQ;EAAEC,YAAY;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACjG,MAAMC,OAAO,GAAGpB,SAAS,CAAC,CAAC;EAE3B,oBACIH,OAAA;IAAKwB,SAAS,EAAC,aAAa;IAAAC,QAAA,eACxBzB,OAAA,CAACL,aAAa;MAACoB,KAAK,EAAEA,KAAM;MAAAU,QAAA,gBACxBzB,OAAA,CAACF,WAAW;QAAG0B,SAAS,EAAED,OAAO,CAACX,KAAM;QAAAa,QAAA,gBACpCzB,OAAA,CAACJ,SAAS;UACN8B,EAAE,EAAC,gBAAgB;UACnBd,KAAK,EAAC,yBAAyB,CAAC;UAAA;UAChCe,KAAK,EAAEX,IAAK;UACZY,OAAO,EAAC,UAAU;UAClBC,QAAQ,EAAGC,CAAC,IAAKb,OAAO,CAACa,CAAC,CAACC,MAAM,CAACJ,KAAK,CAAE;UACzCK,OAAO,EAAEd,UAAW;UACpBe,GAAG,EAAEd,QAAS;UACd,oBAAiB,sBAAsB;UACvCe,UAAU,EAAEb;QAAc;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC,EAEA,CAAClB,YAAY,gBACXpB,OAAA,CAAAE,SAAA,mBAAI,CAAC,gBAELF,OAAA,CAAAE,SAAA;UAAAuB,QAAA,eACIzB,OAAA,CAACH,cAAc;YAAC6B,EAAE,EAAC,sBAAsB;YAAAD,QAAA,EAAC;UAAmB;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAgB;QAAC,gBAChF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEE,CAAC,eACdtC,OAAA,CAACP,MAAM;QACH8C,IAAI,EAAC,QAAQ;QACbC,GAAG,EAAC,UAAU;QACdhB,SAAS,EAAED,OAAO,CAACnB,IAAK;QACxB8B,UAAU,EAAEb,aAAc;QAAAI,QAAA,EAC7B;MAED;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAGd,CAAC;AAAAhB,EAAA,CAvCKR,WAAW;EAAA,QACGX,SAAS;AAAA;AAAAsC,EAAA,GADvB3B,WAAW;AAyCjB,eAAgBA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}